# --- Poetry config --------------------------------------------- #
[tool.poetry]
name = "newsbot"
version = "0.0.1"
description = "News Telegram Bot by PythonBiellaGroup"
authors = ["PythonBiellaGroup"]
license = "MIT"
keywords = [
    "Base",
    "Project",
    "Template",
]

[build-system]
requires = ["poetry-core>=1.6.1"]
build-backend = "poetry.core.masonry.api"
# If you want to use PDM for build instead poetry
# requires = ["pdm-pep517>=1.0.0"]
# build-backend = "pdm.pep517.api"

[[tool.poetry.source]]
name = "pypi.org"
url = "https://pypi.org/simple"
priority = 'default'

# [[tool.poetry.source]]
# name = "private"
# url = "https://github.com"
# priority = 'primary'

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.dependencies]
python = ">=3.9.8, <=3.11"
detect-secrets=">=1.4.0"
ecs-logging = ">=2.1.0"
loguru = ">=0.7.2"
pyaml=">=23.9.6"
pydantic=">=2.3.0"
python-dotenv=">=1.0.0"
Unidecode=">=1.3.6"


[tool.poetry.group.docs.dependencies]
mkdocs=">=1.4.2"
mkdocs-autorefs=">=0.4.1"
mkdocs-gallery=">=0.7.6"
mkdocs-jupyter=">=0.22.0"
mkdocs-macros-plugin=">=0.7.0"
mkdocs-material=">=8.5.11"
mkdocs-minify-plugin=">=0.6.2"
mkdocs-redirects=">=1.2.0"
mkdocstrings=">=0.19.1"
mkdocstrings-python=">=0.8.3"

[tool.poetry.group.dev.dependencies]
autoflake = ">=2.2.1"
autopep8 = ">=2.0.4"
bandit = ">=1.7.5"
black = ">=23.9.1"
commitizen = ">=3.9.0"
cookiecutter = ">=2.3.0"
deptry = ">=0.12.0"
flake8 = ">=6.1.0"
flake8-bandit = ">=4.1.1"
flake8-builtins = ">=2.1.0"
flake8-isort = ">=6.1.0"
ipython = ">=8.15.0"
jupyter = ">=1.0.0"
mypy = ">=1.5.1"
pre-commit = ">=3.4.0"
pylint = ">=2.17.5"
pytest = ">=7.4.2"
pytest-cov = ">=4.1.0"
ruff = ">=0.0.290"
types-PyYAML=">=6.0.12.11"
types-requests=">=2.31.0.2"
types-urllib3=">=1.26.25.14"

# --- Plugins configurations --------------------------------------------- #
[tool.black]
line-length = 120
target-version = ['py39']
preview = true

[tool.mypy]
# files = [""]
plugins = ["pydantic.mypy", "sqlmypy"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ['volumes/', "alembic/", "scripts/", "docs/", "settings/", ".vscode/", ".venv/", ".pytest_cache/", ".mypy_cache/", ".gitlab/", ".github/", ".devcontainer/", "Docker/", "dashboards/"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120
profile = "black"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["app"]

[tool.pytest.ini_options]
markers = [
    "functions: mark test for the base functionalities",
    "core: all about the core",
    "db: all about the database",
    "api: all about the api of the system",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch$prerelease"
version = "0.1.0"
version_files = [
    "__version__.py",
    "pyproject.toml:version"
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]
